{"version":3,"sources":["./src/app/drawsnake/drawsnake.component.ts","./src/app/drawsnake/drawsnake.component.html","./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/game-data.service.ts","./src/app/app.module.ts","./src/app/game/game.component.ts","./src/app/game/game.component.html","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import {ViewChild,ElementRef,AfterViewInit , HostListener,Component, OnInit, Renderer2 } from '@angular/core';\nimport { Queue } from 'queue-typescript';\nimport {GameDataService} from '../game-data.service';\nimport { ToastrService } from 'ngx-toastr';\n@Component({\n  selector: 'app-drawsnake',\n  templateUrl: './drawsnake.component.html',\n  styleUrls: ['./drawsnake.component.css']\n})\n//DrawsnakeComponent\nexport class DrawsnakeComponent implements AfterViewInit {\n  down:number = 0;\n  //snake stuff\n  snakeQueue:Queue<number> = new Queue<number>();\n  snakeSet:Set<number> = new Set<number>();\n  cellSide:number;//input\n  n:number = 10;//iput\n\n  private colourCode:any = {\n 0:\"#FFFFFF\",\n 1:\"#000000\",\n 2:\"#FF0000\"\n};\n\nctx: CanvasRenderingContext2D;\n@ViewChild(\"drawId\") canvas: ElementRef<HTMLCanvasElement>\nconstructor(private gds:GameDataService, private toastr: ToastrService){\n  this.cellSide = gds.cellSide;\n  this.n = gds.n;\n}\nsaveChanges(){\n  if(!this.snakeQueue.length){\n    this.toastr.error(\"Snake Cannot be empty\",\"ERROR\",{\n      positionClass: 'toast-bottom-right',\n      timeOut:3000\n    });\n    return;\n  }\n  this.gds.snakeQueue = this.snakeQueue;\n  this.gds.snakeSet = this.snakeSet;\n  this.gds.usePreview = true;\n  this.toastr.success(\"Snake is changed\",\"CHANGED\",{\n    positionClass: 'toast-bottom-right',\n    timeOut:3000\n  });\n}\nmovingEvt(evt:MouseEvent){\n  let x:number = evt.offsetX;\n  let y:number = evt.offsetY;\n  if(this.down>0) this.insertSnake(x,y);\n\n}\n\nconvertPos(pos:any){\n  if (pos.y === 0) return pos.x+1;\n  else return (pos.y)*this.n+pos.x + 1;\n}\n\nchangeColour(pos:any, colourNum:number){\n  this.ctx.fillStyle = this.colourCode[colourNum];\n  this.ctx.fillRect( pos.x*this.cellSide,pos.y*this.cellSide, this.cellSide, this.cellSide);\n}\n\ndrawBorder(){\n  this.ctx.strokeStyle = \"black\";\n  this.ctx.lineWidth = 2;\n  for(let i=1; i<this.n; i++){\n      this.ctx.moveTo(i*this.cellSide, 0);\n      this.ctx.lineTo(i*this.cellSide, this.cellSide*this.n);\n      this.ctx.stroke();\n  }\n  for(let i=1; i<this.n; i++){\n      this.ctx.moveTo(0 , i*this.cellSide);\n      this.ctx.lineTo(this.cellSide*this.n, i * this.cellSide);\n      this.ctx.stroke();\n  }\n}\n\nconvertNum(num:number){\n  if(num <= this.n)\treturn [num-1,0];\n  else return num%this.n > 0 ? [num%this.n-1,Math.floor(num/this.n)]:[this.n-1, num/this.n-1];\n}\n\ninsertSnake(x:number, y:number){\n  let c:any = {};\n  let num:number = 0;\n  if(x<0 || y<0 || y>this.n*this.cellSide || x>this.n*this.cellSide) return;\n  //do the estimate here\n  if (x===0) x = 1;\n  if (y===0) y = 1;\n  c.x = Math.ceil(x/this.cellSide) - 1;\n  c.y = Math.ceil(y/this.cellSide) - 1;\n  num = this.convertPos(c);\n\n  //check if num is valid against front this.snakeQueue.tail\n  if (!this.snakeSet.has(num)) {\n    if(this.snakeQueue.length){\n      let tmpNum:number[] = this.convertNum(num);\n      let tmpT:number[] = this.convertNum(this.snakeQueue.tail);\n      if (tmpNum[1] === tmpT[1]){\n        if(!(tmpNum[0]===tmpT[0]+1 || tmpNum[0]===tmpT[0]-1 || tmpNum[0]===tmpT[0]+(this.n-1)||tmpNum[0]===tmpT[0]-(this.n-1))){\n          return;\n        }\n      } else if(tmpNum[0] === tmpT[0]){\n        if(!(tmpNum[1]===tmpT[1]+1 || tmpNum[1]===tmpT[1]-1 || tmpNum[1]===tmpT[1]+(this.n-1)||tmpNum[1]===tmpT[1]-(this.n-1))){\n          return;\n        }\n      } else {\n        return;\n      }\n    }\n    this.snakeSet.add(num);\n    this.snakeQueue.enqueue(num);\n    this.changeColour(c, 1);\n  }\n}\n\n\n\n\nupEvt(evt:MouseEvent){\n  console.log(this.snakeQueue.toArray());\n  console.log(this.snakeSet);\n  this.down--;\n}\n\ndownEvt(evt:MouseEvent){\n  let x:number = evt.offsetX;\n  let y:number = evt.offsetY;\n  this.insertSnake(x,y);\n  this.down++;\n}\n\nngAfterViewInit(){\n  this.canvas.nativeElement.width = this.n * this.cellSide;\n  this.canvas.nativeElement.height = this.n * this.cellSide;\n  this.ctx = this.canvas.nativeElement.getContext(\"2d\");\n  this.drawBorder();\n}\n\n\n\n\n}\n","<div class=\" container p-0 m-0 infobtn\">\n  <svg  data-toggle=\"collapse\" href=\"#collapseExample\"   xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-info-circle float-right\" viewBox=\"0 0 16 16\">\n    <path d=\"M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z\"/>\n    <path d=\"m8.93 6.588-2.29.287-.082.38.45.083c.294.07.352.176.288.469l-.738 3.468c-.194.897.105 1.319.808 1.319.545 0 1.178-.252 1.465-.598l.088-.416c-.2.176-.492.246-.686.246-.275 0-.375-.193-.304-.533L8.93 6.588zM9 4.5a1 1 0 1 1-2 0 1 1 0 0 1 2 0z\"/>\n  </svg>\n  <div id=\"collapseExample\" class=\"collapse bg-transparent container float-left\">\n      <nav aria-label=\"Page navigation example\">\n        <ul class=\"pagination justify-content-center\">\n          <li class=\"page-item\"   routerLink=\"/game\" routerLinkActive=\"active\"><a class=\"page-link\">Snake Game</a></li>\n          <li class=\"page-item\" routerLink=\"/drawsnake\" routerLinkActive=\"active\"><a class=\"page-link\" >Change snake</a></li>\n        </ul>\n      </nav>\n\n        <div class=\"form-group row justify-content-center\">\n          <div class=\"col-sm-auto \">\n            <button  class=\" btn  form-control btn-success\" (click)=\"saveChanges()\">Save Changes</button>\n          </div>\n        </div>\n  </div>\n</div>\n\n<canvas #drawId class=\"show\" (mousemove)=\"movingEvt($event)\" (mouseout)=\"down=0\" (mousedown)=\"downEvt($event)\" (mouseup)=\"upEvt($event)\" style=\" border: 1px solid blue\">\n</canvas>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component } from '@angular/core';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'snakegame';\n}\n","<router-outlet></router-outlet>\r\n","import { Injectable } from '@angular/core';\nimport { Queue } from 'queue-typescript';\n@Injectable({\n  providedIn: 'root'\n})\nexport class GameDataService {\n  n:number = 10;\n  cellSide: number = 10;\n  snakeQueue:Queue<number> = new Queue<number>();\n  snakeSet:Set<number> = new Set<number>();\n  usePreview = false;\n  constructor() { }\n}\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule } from '@angular/forms';\n\nimport { AppComponent } from './app.component';\nimport { AppRoutingModule } from './app-routing.module';\n\n\nimport { DrawsnakeComponent } from './drawsnake/drawsnake.component';\nimport { GameComponent } from './game/game.component';\n\nimport { CommonModule } from '@angular/common';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport {AngularMouseTextboxModule} from 'angular-mouse-textbox';\nimport { AngularResizeElementModule } from 'angular-resize-element';\nimport { ToastrModule } from 'ngx-toastr';\nimport { Queue } from 'queue-typescript';\nimport { SnakegameAngularModule } from \"snakegame-angular\";\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    DrawsnakeComponent,\n    GameComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    CommonModule,\n    AngularMouseTextboxModule,\n   AngularResizeElementModule,\n   BrowserAnimationsModule,\n   ToastrModule.forRoot(),\n   FormsModule,\n   SnakegameAngularModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import {OnChanges,SimpleChanges, Component, ViewChild, ElementRef,AfterViewInit,  Renderer2,HostListener  } from '@angular/core';\nimport {AngularResizeElementEvent} from './angularResizeElementEvent';\n//import {AngularResizeElementDirection} from './angularResizeDirection';\nimport { ToastrService } from 'ngx-toastr';\nimport {GameDataService} from '../game-data.service';\nimport { Queue } from 'queue-typescript';\n\nenum AngularResizeElementDirection {\n  TOP = 'top',\n  TOP_RIGHT = 'top-right',\n  RIGHT = 'right',\n  BOTTOM_RIGHT = 'bottom-right',\n  BOTTOM = 'bottom',\n  BOTTOM_LEFT = 'bottom-left',\n  LEFT = 'left',\n  TOP_LEFT = 'top-left'\n}\n@Component({\n  selector: 'app-game',\n  templateUrl: './game.component.html',\n  styleUrls: ['./game.component.css']\n})\n\nexport class GameComponent implements AfterViewInit {\n\n    x:number;\n    y:number;\n\n    speed:number;\n\n    cellSide:number;\n    n:number;\n\n    data: any = {};\n    data2:any = {};\n    c:string = \"appliedResize\";\n    //SNAKES PAUSE STATE\n    p:string;\n    //mouse text box\n    activate:boolean;\n    tmpN:number;\n\n    //somehtin\n    //setting for the draw-snake\n    snakeQueue:Queue<number> = new Queue<number>();\n    snakeSet:Set<number> = new Set<number>();\n    usePreview:boolean = false;\n    showHelp:boolean = false;\n\n\n\n    public readonly AngularResizeElementDirection = AngularResizeElementDirection;\n\n    @ViewChild('container1',  {read: ElementRef}) containerElement:ElementRef\n    @ViewChild('container2',  {read: ElementRef}) containerElement2:ElementRef\n\n    constructor(private renderer: Renderer2, private toastr: ToastrService, private gds:GameDataService){\n      //bare bones\n      this.x = 4;\n      this.y = 4;\n      this.speed=2;\n      this.cellSide = gds.cellSide;\n\n      this.n = gds.n;\n      this.p=\"pause\";\n\n      this.activate = false;\n      this.tmpN = this.n;\n\n\n    }\n    ngOnInit(){\n      if(this.gds.usePreview){\n        this.snakeQueue = this.gds.snakeQueue;\n        this.snakeSet = this.gds.snakeSet;\n        this.usePreview =true;\n      }\n    }\n    usePreviewChanges(usePreview:boolean){\n\n      this.usePreview = !usePreview;\n      this.gds.usePreview = !this.usePreview;\n    }\n\n    goDraw(){\n      this.gds.n = this.n;\n      this.gds.cellSide = this.cellSide;\n    }\n\n    ngAfterViewInit(){\n      this.renderer.setStyle(this.containerElement2.nativeElement,\"width\",this.n*this.cellSide+\"px\");\n      this.renderer.setStyle(this.containerElement2.nativeElement,\"height\",this.n*this.cellSide+\"px\");\n      this.renderer.setStyle(this.containerElement.nativeElement,\"width\",this.containerElement2.nativeElement.offsetWidth+\"px\");\n      this.renderer.setStyle(this.containerElement.nativeElement,\"height\",this.containerElement2.nativeElement.offsetHeight+\"px\");\n    }\n    public onResizePreview(evt: AngularResizeElementEvent):void{\n      this.activate = true;\n      if(evt.currentWidthValue % this.cellSide === 0){\n        this.data2.width = evt.currentWidthValue;\n        this.data2.height = evt.currentHeightValue;\n\n        this.tmpN = evt.currentWidthValue / this.cellSide;\n      }\n    }\n\n    public onResize(evt: AngularResizeElementEvent): void {\n      this.activate = false;\n      this.data.width = this.data2.width;\n      this.data.height = this.data2.height;\n      this.n = this.data.width/this.cellSide;\n      this.showSuccess(\"SIZE\", \"\"+this.n);\n    }\n    death(){\n      this.toastr.error(\"restart game\",\"DEATH\",{\n        positionClass: 'toast-bottom-right',\n        timeOut:3000\n      });\n    }\n    showSuccess(att:string, val:string){\n      this.toastr.success(val, att,{\n        positionClass: 'toast-bottom-right',\n        timeOut:3000\n      });\n    }\n\n}\n","\n<div class=\"overflow-auto container p-0 m-0 infobtn\" >\n  <svg  data-toggle=\"collapse\" href=\"#collapseExample\"   xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-info-circle float-right\" viewBox=\"0 0 16 16\">\n    <path d=\"M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z\"/>\n    <path d=\"m8.93 6.588-2.29.287-.082.38.45.083c.294.07.352.176.288.469l-.738 3.468c-.194.897.105 1.319.808 1.319.545 0 1.178-.252 1.465-.598l.088-.416c-.2.176-.492.246-.686.246-.275 0-.375-.193-.304-.533L8.93 6.588zM9 4.5a1 1 0 1 1-2 0 1 1 0 0 1 2 0z\"/>\n  </svg>\n\n  <div id=\"collapseExample\" class=\"collapse bg-transparent container float-left\" >\n      <nav aria-label=\"Page navigation example\">\n        <ul class=\"pagination justify-content-center\">\n          <li class=\"page-item\"  [ngClass]=\"{'active': showHelp}\"><a class=\"page-link\" (click)=\"showHelp=!showHelp\">Toggle Help</a></li>\n          <li class=\"page-item\"  routerLink=\"/game\" routerLinkActive=\"active\"><a class=\"page-link\" >Snake Game</a></li>\n          <li class=\"page-item\" routerLink=\"/drawsnake\" routerLinkActive=\"active\" (click)=\"goDraw()\"><a class=\"page-link\" >Change snake</a></li>\n        </ul>\n      </nav>\n        <div [ngClass]=\"{'show':showHelp, 'notShow':!showHelp}\">\n          <ol class=\"list-group\">\n            <li class=\"list-group-item d-flex justify-content-between align-items-start\">\n              <div class=\"ms-2 me-auto w-100\">\n                <div class=\"font-weight-bold\">Snake Game</div>\n                  <ol class=\"list-group\">\n                      <li class=\"list-group-item\">Click start-> click on snake game box then use arrow keys to control snake movements</li>\n                    <li class=\"list-group-item\">Slide the slider to modify respective game setting</li>\n                    <li class=\"list-group-item\">At the bottom right corner of the snake game box, click and drag it to desired map size.</li>\n                    <li class=\"list-group-item text-success\">You are able to change any of these three setting during the game and changes can be seen in real-time</li>\n                  </ol>\n              </div>\n            </li>\n            <li class=\"list-group-item d-flex justify-content-between align-items-start\">\n              <div class=\"ms-2 me-auto w-100\">\n                <div class=\"font-weight-bold\">Change Snake</div>\n                  <ol class=\"list-group\">\n                    <li class=\"list-group-item\">The dimension of the drawing box is dependent on the map setting configured at the snake game page. i.e. size of map and snake size.</li>\n                    <li class=\"list-group-item\">Click/Click and drag cells in the drawing box to draw the snake you want to start of with in the snake game page.</li>\n                    <li class=\"list-group-item\">The first cell you click would be the head of the snake.</li>\n                    <li class=\"list-group-item\">Finally, click Save Changes -> click Snake Game. And you will notice that the snake in the game is changed</li>\n                    <li class=\"list-group-item text-warning\">You cannot draw a disconnected snake.</li>\n                  </ol>\n              </div>\n\n            </li>\n        </ol>\n        </div>\n        <div [ngClass]=\"{'show':!showHelp, 'notShow':showHelp}\">\n          <div class=\"form-group row\">\n            <label for=\"speedInput\" class=\"col-sm-3 col-form-label\">SPEED</label>\n            <div class=\"col-sm-9\">\n              <input [(ngModel)]=\"speed\" type=\"range\" class=\"form-range form-control\" min=\"1\" max=\"10\" step=\"1\" id=\"speedInput\">\n            </div>\n          </div>\n          <div class=\"form-group row\">\n            <label for=\"snakesizeInput\" class=\"col-sm-3 col-form-label\">Snake Size</label>\n            <div class=\"col-sm-9\">\n              <input [(ngModel)]=\"cellSide\" (ngModelChange)=\"ngAfterViewInit()\" type=\"range\" class=\"form-range form-control\" min=\"5\" max=\"50\" step=\"5\" id=\"snakesizeInput\">\n            </div>\n          </div>\n          <div class=\"form-group row justify-content-center\">\n            <div class=\"col-sm-auto \">\n              <button  class=\" btn  form-control btn-success\" *ngIf=\"p==='pause'; else elseBlock\"  (click)=\"p='start'\">START</button>\n              <ng-template  #elseBlock  >\n              <button class=\"btn  form-control btn-danger\" *ngIf=\"p==='start'\"  (click)=\"p='pause'\">PAUSE</button>\n              </ng-template>\n            </div>\n          </div>\n        </div>\n\n  </div>\n\n</div>\n\n<div [mousetextbox]=\"activate\" [textIn] = \"''+tmpN\" [zindex]=3></div>\n<div class=\"container1\" #container1 [style.width.px]=\"data.width\" [style.height.px]=\"data.height\" >\n  <div class=\"container2\"    #container2   [style.width.px]=\"data2.width\" [style.height.px]=\"data2.height\">\n\n    <snakegame-angular (death)=\"death()\" [(p)]=\"p\" [(x)]=\"x\" [(y)]=\"y\"  [(speed)]=\"speed\" [cellSide]=\"cellSide\" [n]=\"n\" [usePreview]=\"usePreview\" (usePreviewChange)=\"usePreviewChanges($event)\" [snakeSet]=\"snakeSet\" [snakeQueue]=\"snakeQueue\"></snakegame-angular>\n\n    <div  class=\"resize resize__bottom--right\" style=\"border: 3px solid red\" (resize)=\"onResizePreview($event)\"\n      (resizeEnd)=\"onResize($event)\" [proportionalResize]=\"true\" [applyClass]=\"c\" [targetElement]=\"container2\"\n      [direction]=\"AngularResizeElementDirection.BOTTOM_RIGHT\">\n    </div>\n\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { DrawsnakeComponent } from './drawsnake/drawsnake.component';\nimport { GameComponent } from './game/game.component';\n\nconst routes: Routes = [\n  { path: 'drawsnake', component: DrawsnakeComponent },\n  {path:\"game\", component:GameComponent},\n  {path:\"\", redirectTo:\"/game\", pathMatch:\"full\"}\n];\n\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}